{{- if .Values.InitSchema.Enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ printf "%s-%s" .Release.Name .Values.Name | trunc 56 }}-init-schema"
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-1"
spec:
  template:
{{- if and (.Values.NetworkPolicy.Enabled) (not .Values.NetworkPolicy.AllowExternal) }}
    metadata:
      labels:
        {{.Release.Name}}-{{.Values.Component}}-client: "true"
{{- end }}
    spec:
      volumes:
    {{- if .Values.Secure.Enabled }}
        {{- if .Values.Secure.BringYourOwnCert.Enabled }}
      - name: client-certs
        secret:
          secretName: cockroachdb.client.root
          defaultMode: 256
        {{- end }}
    {{- end }}
      - name: schema
        configMap:
          name: {{ .Values.InitSchema.ConfigMapName }}
      containers:
      - name: "init-schema"
        image: "{{ .Values.Image }}:{{ .Values.ImageTag }}"
        imagePullPolicy: "{{ .Values.ImagePullPolicy }}"
        volumeMounts:
        - name: schema
          mountPath: /cockroach/init.sql
          subPath: init.sql
    {{- if .Values.Secure.Enabled }}
        {{- if .Values.Secure.BringYourOwnCert.Enabled }}
        - name: client-certs
          mountPath: /cockroach-certs
        {{- end }}
    {{- end }}
        command: 
          - "/bin/bash"
          - "-ecx"
          - "/cockroach/cockroach sql{{- if .Values.Secure.Enabled }}{{- if .Values.Secure.BringYourOwnCert.Enabled }} --certs-dir /cockroach-certs{{- end }}{{ else }} --insecure{{ end }} --host={{ printf "%s-%s" .Release.Name .Values.Name | trunc 56 }}-public.{{ .Release.Namespace }} --port={{ .Values.ExternalGrpcPort }} < /cockroach/init.sql"
      restartPolicy: OnFailure
{{- end }}
